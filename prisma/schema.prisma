generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model amigos {
  id_usuario1                         Int
  id_usuario2                         Int
  usuario_amigos_id_usuario1Tousuario usuario @relation("amigos_id_usuario1Tousuario", fields: [id_usuario1], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
  usuario_amigos_id_usuario2Tousuario usuario @relation("amigos_id_usuario2Tousuario", fields: [id_usuario2], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)

  @@id([id_usuario1, id_usuario2])
}

model chat {
  id_chat                    Int          @id @default(autoincrement())
  chatpartida                chatpartida?
  chatprivado                chatprivado?
  mensaje_mensaje_chatTochat mensaje[]    @relation("mensaje_chatTochat")
}

model chatpartida {
  id_chatpartida Int      @id
  id_partida     Int?
  chat           chat     @relation(fields: [id_chatpartida], references: [id_chat], onDelete: NoAction, onUpdate: NoAction)
  partida        partida? @relation(fields: [id_partida], references: [id_partida], onDelete: NoAction, onUpdate: NoAction)
}

model chatprivado {
  id_chatprivado                        Int      @id
  usuario1                              Int?
  usuario2                              Int?
  chat                                  chat     @relation(fields: [id_chatprivado], references: [id_chat], onDelete: NoAction, onUpdate: NoAction)
  usuario_chatprivado_usuario1Tousuario usuario? @relation("chatprivado_usuario1Tousuario", fields: [usuario1], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
  usuario_chatprivado_usuario2Tousuario usuario? @relation("chatprivado_usuario2Tousuario", fields: [usuario2], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model estadisticasacumuladas {
  usuario                                         Int     @id
  vecescaido                                      Int
  tiros                                           Int
  veces6                                          Int
  partidasganadas                                 Int
  vecescalavera                                   Int
  usuario_estadisticasacumuladas_usuarioTousuario usuario @relation("estadisticasacumuladas_usuarioTousuario", fields: [usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model ficha {
  id_ficha Int   @id @default(autoincrement())
  id_skin  Int?
  skin     skin? @relation(fields: [id_skin], references: [id_skin], onDelete: NoAction, onUpdate: NoAction)
}

model formaparte {
  usuario                             Int
  sala                                Int
  sala_formaparte_salaTosala          sala    @relation("formaparte_salaTosala", fields: [sala], references: [id_sala], onDelete: NoAction, onUpdate: NoAction)
  usuario_formaparte_usuarioTousuario usuario @relation("formaparte_usuarioTousuario", fields: [usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)

  @@id([usuario, sala])
}

model mensaje {
  id_mensaje              Int     @id @default(autoincrement())
  fecha                   String  @db.VarChar(10)
  hora                    String  @db.VarChar(8)
  contenido               String
  chat                    Int
  remitente               Int
  chat_mensaje_chatTochat chat    @relation("mensaje_chatTochat", fields: [chat], references: [id_chat], onDelete: NoAction, onUpdate: NoAction)
  usuario                 usuario @relation(fields: [remitente], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)
}

model partida {
  id_partida  Int           @id @default(autoincrement())
  id_sala     Int?
  chatpartida chatpartida[]
  sala        sala?         @relation(fields: [id_sala], references: [id_sala], onDelete: NoAction, onUpdate: NoAction)
  situacion   situacion[]
}

model posee {
  usuario                        Int
  id_skin                        Int
  skin                           skin    @relation(fields: [id_skin], references: [id_skin], onDelete: NoAction, onUpdate: NoAction)
  usuario_posee_usuarioTousuario usuario @relation("posee_usuarioTousuario", fields: [usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)

  @@id([usuario, id_skin])
}

model sala {
  id_sala                          Int          @id @default(autoincrement())
  modo                             Int
  nombre                           String       @db.VarChar(50)
  formaparte_formaparte_salaTosala formaparte[] @relation("formaparte_salaTosala")
  partida                          partida[]
}

model situacion {
  usuario                            Int
  id_partida                         Int
  casilla                            Int
  turno                              Int
  partida                            partida @relation(fields: [id_partida], references: [id_partida], onDelete: NoAction, onUpdate: NoAction)
  usuario_situacion_usuarioTousuario usuario @relation("situacion_usuarioTousuario", fields: [usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction)

  @@id([usuario, id_partida])
}

model skin {
  id_skin Int       @id @default(autoincrement())
  imagen  String
  precio  Int
  ficha   ficha[]
  posee   posee[]
  tablero tablero[]
}

model tablero {
  id_tablero Int   @id @default(autoincrement())
  id_skin    Int?
  skin       skin? @relation(fields: [id_skin], references: [id_skin], onDelete: NoAction, onUpdate: NoAction)
}

model usuario {
  id_usuario                                                     Int                     @id @default(autoincrement())
  nickname                                                       String                  @unique @db.VarChar(20)
  password                                                       String                  @db.VarChar(128)
  monedas                                                        Int
  email                                                          String                  @unique @db.VarChar(128)
  profilephoto                                                   String?
  amigos_amigos_id_usuario1Tousuario                             amigos[]                @relation("amigos_id_usuario1Tousuario")
  amigos_amigos_id_usuario2Tousuario                             amigos[]                @relation("amigos_id_usuario2Tousuario")
  chatprivado_chatprivado_usuario1Tousuario                      chatprivado[]           @relation("chatprivado_usuario1Tousuario")
  chatprivado_chatprivado_usuario2Tousuario                      chatprivado[]           @relation("chatprivado_usuario2Tousuario")
  estadisticasacumuladas_estadisticasacumuladas_usuarioTousuario estadisticasacumuladas? @relation("estadisticasacumuladas_usuarioTousuario")
  formaparte_formaparte_usuarioTousuario                         formaparte[]            @relation("formaparte_usuarioTousuario")
  mensaje                                                        mensaje[]
  posee_posee_usuarioTousuario                                   posee[]                 @relation("posee_usuarioTousuario")
  situacion_situacion_usuarioTousuario                           situacion[]             @relation("situacion_usuarioTousuario")
}
