generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model amigos {
  id_usuario1                         Int
  id_usuario2                         Int
  usuario_amigos_id_usuario1Tousuario usuario @relation("amigos_id_usuario1Tousuario", fields: [id_usuario1], references: [id_usuario], onDelete: Cascade)
  usuario_amigos_id_usuario2Tousuario usuario @relation("amigos_id_usuario2Tousuario", fields: [id_usuario2], references: [id_usuario], onDelete: Cascade)

  @@id([id_usuario1, id_usuario2])
}

model estadisticasacumuladas {
  usuario                                         Int     @id
  vecescaido                                      Int
  tiros                                           Int
  veces6                                          Int
  partidasganadas                                 Int
  vecescalavera                                   Int
  usuario_estadisticasacumuladas_usuarioTousuario usuario @relation("estadisticasacumuladas_usuarioTousuario", fields: [usuario], references: [id_usuario], onDelete: Cascade)
}

model ficha {
  id_ficha Int   @id @default(autoincrement())
  id_skin  Int?
  skin     skin? @relation(fields: [id_skin], references: [id_skin], onDelete: Cascade)
}

model mensaje {
  id_mensaje                            Int     @id @default(autoincrement())
  fecha                                 String  @db.VarChar(10)
  hora                                  String  @db.VarChar(8)
  contenido                             String
  emisor                                Int
  destinatario                          Int
  usuario_mensaje_destinatarioTousuario usuario @relation("mensaje_destinatarioTousuario", fields: [destinatario], references: [id_usuario], onDelete: Cascade)
  usuario_mensaje_emisorTousuario       usuario @relation("mensaje_emisorTousuario", fields: [emisor], references: [id_usuario], onDelete: Cascade)
}

model posee {
  usuario                        Int
  id_skin                        Int
  skin                           skin    @relation(fields: [id_skin], references: [id_skin], onDelete: Cascade)
  usuario_posee_usuarioTousuario usuario @relation("posee_usuarioTousuario", fields: [usuario], references: [id_usuario], onDelete: Cascade)

  @@id([usuario, id_skin])
}

model skin {
  id_skin Int       @id @default(autoincrement())
  imagen  String
  precio  Int
  ficha   ficha[]
  posee   posee[]
  tablero tablero[]
}

model solicitud {
  id_usuario_envia                             Int
  id_usuario_recibe                            Int
  usuario_solicitud_id_usuario_enviaTousuario  usuario @relation("solicitud_id_usuario_enviaTousuario", fields: [id_usuario_envia], references: [id_usuario], onDelete: Cascade)
  usuario_solicitud_id_usuario_recibeTousuario usuario @relation("solicitud_id_usuario_recibeTousuario", fields: [id_usuario_recibe], references: [id_usuario], onDelete: Cascade)

  @@id([id_usuario_envia, id_usuario_recibe])
}

model tablero {
  id_tablero Int   @id @default(autoincrement())
  id_skin    Int?
  skin       skin? @relation(fields: [id_skin], references: [id_skin], onDelete: Cascade)
}

model usuario {
  id_usuario                                                     Int                     @id @default(autoincrement())
  nickname                                                       String                  @unique @db.VarChar(20)
  password                                                       String                  @db.VarChar(128)
  monedas                                                        Int
  email                                                          String                  @unique @db.VarChar(128)
  profilephoto                                                   String?
  amigos_amigos_id_usuario1Tousuario                             amigos[]                @relation("amigos_id_usuario1Tousuario")
  amigos_amigos_id_usuario2Tousuario                             amigos[]                @relation("amigos_id_usuario2Tousuario")
  estadisticasacumuladas_estadisticasacumuladas_usuarioTousuario estadisticasacumuladas? @relation("estadisticasacumuladas_usuarioTousuario")
  mensaje_mensaje_destinatarioTousuario                          mensaje[]               @relation("mensaje_destinatarioTousuario")
  mensaje_mensaje_emisorTousuario                                mensaje[]               @relation("mensaje_emisorTousuario")
  posee_posee_usuarioTousuario                                   posee[]                 @relation("posee_usuarioTousuario")
  solicitud_solicitud_id_usuario_enviaTousuario                  solicitud[]             @relation("solicitud_id_usuario_enviaTousuario")
  solicitud_solicitud_id_usuario_recibeTousuario                 solicitud[]             @relation("solicitud_id_usuario_recibeTousuario")
}
